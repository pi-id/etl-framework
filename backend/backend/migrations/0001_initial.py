# Generated by Django 2.1.15 on 2020-08-27 07:54

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('batch_sid', models.IntegerField(primary_key=True, serialize=False)),
                ('batch_id', models.IntegerField(unique=True)),
                ('batch_name', models.CharField(max_length=200)),
                ('batch_desc', models.CharField(max_length=200)),
                ('batch_type', models.CharField(max_length=200)),
                ('batch_status', models.CharField(max_length=200)),
                ('server_name', models.CharField(blank=True, max_length=200, null=True)),
                ('source_database_name', models.CharField(max_length=500)),
                ('destination_database_name', models.CharField(max_length=500)),
                ('ssis_package_name', models.CharField(max_length=500)),
                ('job_name', models.CharField(blank=True, max_length=200, null=True)),
                ('job_step_name', models.CharField(blank=True, max_length=200, null=True)),
                ('dashboard_type', models.CharField(max_length=200)),
                ('use_mail_status', models.BooleanField(blank=True, null=True)),
                ('insert_date', models.DateField()),
                ('insert_user', models.CharField(max_length=200)),
                ('update_date', models.DateField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'batch',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DependencyBatchRecursion',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('batch_name', models.CharField(max_length=500, null=True)),
                ('dependent_batch_name', models.CharField(max_length=500, null=True)),
                ('level', models.IntegerField()),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DependencyTaskRecursion',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('batch_sid', models.IntegerField()),
                ('task_name', models.CharField(max_length=500)),
                ('dependent_task_name', models.CharField(max_length=500)),
                ('level', models.IntegerField()),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetaAttribute',
            fields=[
                ('attribute_id', models.AutoField(primary_key=True, serialize=False)),
                ('column_name', models.CharField(blank=True, max_length=255, null=True)),
                ('pk_flag', models.BooleanField()),
                ('dv_f', models.BooleanField(blank=True, db_column='DV_f', null=True)),
                ('dv_sid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'meta_attribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetaAutoLoad',
            fields=[
                ('auto_load_sid', models.AutoField(primary_key=True, serialize=False)),
                ('automated_load_status', models.CharField(blank=True, max_length=30, null=True)),
                ('population_sid', models.IntegerField(blank=True, null=True)),
                ('insert_date', models.DateTimeField()),
                ('insert_user', models.CharField(max_length=255)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'meta_auto_load',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetaBatch',
            fields=[
                ('batch_sid', models.AutoField(primary_key=True, serialize=False)),
                ('batch_id', models.CharField(blank=True, max_length=255, null=True)),
                ('batch_name', models.CharField(max_length=255)),
                ('batch_desc', models.CharField(blank=True, max_length=2000, null=True)),
                ('batch_type', models.CharField(max_length=255)),
                ('batch_status', models.CharField(max_length=30)),
                ('server_name', models.CharField(blank=True, max_length=255, null=True)),
                ('source_database_name', models.CharField(blank=True, max_length=255, null=True)),
                ('destination_database_name', models.CharField(blank=True, max_length=255, null=True)),
                ('ssis_package_name', models.CharField(blank=True, max_length=255, null=True)),
                ('job_name', models.CharField(blank=True, max_length=255, null=True)),
                ('job_step_name', models.CharField(blank=True, max_length=255, null=True)),
                ('job_scheduled', models.BooleanField(blank=True, null=True)),
                ('dashboard_type', models.CharField(blank=True, max_length=30, null=True)),
                ('use_mail_status', models.BooleanField()),
                ('insert_date', models.DateTimeField(blank=True, null=True)),
                ('insert_user', models.CharField(blank=True, max_length=255, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'meta_batch',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetaBatchInstitute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_sid', models.BigIntegerField(blank=True, null=True)),
                ('institute_id', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'meta_batch_institute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetaBatchLog',
            fields=[
                ('batch_log_sid', models.AutoField(primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('batch_log_status', models.CharField(blank=True, max_length=30, null=True)),
                ('batch_duration', models.IntegerField(blank=True, null=True)),
                ('run_count', models.IntegerField(blank=True, null=True)),
                ('last_batch', models.BooleanField()),
                ('ssis_execution_id', models.BigIntegerField(blank=True, null=True)),
                ('sql_agent_start_date', models.DateTimeField(blank=True, null=True)),
                ('sql_agent_instance_id', models.IntegerField(blank=True, null=True)),
                ('insert_date', models.DateTimeField()),
                ('insert_user', models.CharField(max_length=255)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=255, null=True)),
                ('population_sid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'meta_batch_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetaConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('force_rerun', models.BooleanField()),
                ('start_batch', models.IntegerField()),
                ('maximumparallelism', models.IntegerField(blank=True, db_column='MaximumParallelism', null=True)),
            ],
            options={
                'db_table': 'meta_configuration',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetaDatasource',
            fields=[
                ('datasource_sid', models.AutoField(primary_key=True, serialize=False)),
                ('source_system_id', models.CharField(blank=True, max_length=30, null=True)),
                ('datasource_id', models.CharField(blank=True, max_length=255, null=True)),
                ('datasource_name', models.CharField(blank=True, max_length=255, null=True)),
                ('datasource_version', models.CharField(blank=True, max_length=255, null=True)),
                ('datasource_provider', models.CharField(blank=True, max_length=255, null=True)),
                ('datasource_status', models.CharField(max_length=30)),
                ('datasource_description', models.CharField(blank=True, max_length=2000, null=True)),
                ('datasource_type', models.CharField(blank=True, max_length=30, null=True)),
                ('rdbms_name', models.CharField(blank=True, max_length=255, null=True)),
                ('rdbms_version', models.CharField(blank=True, max_length=255, null=True)),
                ('server_name', models.CharField(blank=True, max_length=255, null=True)),
                ('server_ip_address', models.CharField(blank=True, max_length=30, null=True)),
                ('server_port', models.CharField(blank=True, max_length=30, null=True)),
                ('db_name', models.CharField(blank=True, max_length=255, null=True)),
                ('db_port', models.CharField(blank=True, max_length=255, null=True)),
                ('user_name', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('connection_string', models.CharField(blank=True, max_length=255, null=True)),
                ('mail', models.CharField(blank=True, max_length=2000, null=True)),
                ('decimal_separator', models.CharField(blank=True, max_length=30, null=True)),
                ('thousands_separator', models.CharField(blank=True, max_length=30, null=True)),
                ('date_mask', models.CharField(blank=True, max_length=30, null=True)),
                ('insert_date', models.DateTimeField()),
                ('insert_user', models.CharField(max_length=255)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'meta_datasource',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetaDependency',
            fields=[
                ('dependency_sid', models.AutoField(primary_key=True, serialize=False)),
                ('dependency_type', models.CharField(max_length=30)),
                ('dependency_level', models.CharField(max_length=30)),
                ('dependency_status', models.CharField(blank=True, max_length=30, null=True)),
                ('insert_date', models.DateTimeField()),
                ('insert_user', models.CharField(max_length=255)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'meta_dependency',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetaDependencyTask',
            fields=[
                ('task_dependency_sid', models.AutoField(primary_key=True, serialize=False)),
                ('dependency_type', models.CharField(max_length=30)),
                ('dependency_level', models.CharField(max_length=30)),
                ('dependency_status', models.CharField(blank=True, max_length=30, null=True)),
                ('insert_date', models.DateTimeField()),
                ('insert_user', models.CharField(max_length=255)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'meta_dependency_task',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetaDomainValues',
            fields=[
                ('dva_sid', models.AutoField(primary_key=True, serialize=False)),
                ('dva_value', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'meta_domain_values',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetaErrorLog',
            fields=[
                ('error_log_sid', models.AutoField(primary_key=True, serialize=False)),
                ('machine_name', models.CharField(blank=True, max_length=256, null=True)),
                ('ssis_package_id', models.CharField(blank=True, max_length=256, null=True)),
                ('ssis_package_name', models.CharField(blank=True, max_length=256, null=True)),
                ('ssis_task_id', models.CharField(blank=True, max_length=256, null=True)),
                ('ssis_task_name', models.CharField(blank=True, max_length=256, null=True)),
                ('ssis_task_description', models.CharField(blank=True, max_length=1000, null=True)),
                ('ssis_task_start_time', models.DateTimeField(blank=True, null=True)),
                ('ssis_info', models.CharField(blank=True, max_length=2000, null=True)),
                ('sql_statement', models.TextField(blank=True, null=True)),
                ('error_code', models.IntegerField(blank=True, null=True)),
                ('error_desc', models.CharField(blank=True, max_length=4000, null=True)),
                ('ssis_execution_id', models.BigIntegerField(blank=True, null=True)),
                ('insert_date', models.DateTimeField()),
                ('insert_user', models.CharField(max_length=255)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'meta_error_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetaObject',
            fields=[
                ('object_sid', models.AutoField(primary_key=True, serialize=False)),
                ('object_id', models.CharField(blank=True, max_length=255, null=True)),
                ('object_schema', models.CharField(max_length=255)),
                ('object_name', models.CharField(max_length=255)),
                ('object_description', models.CharField(blank=True, max_length=2000, null=True)),
                ('object_status', models.CharField(max_length=30)),
                ('source_select', models.TextField(blank=True, null=True)),
                ('insert_date', models.DateTimeField()),
                ('insert_user', models.CharField(max_length=255)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'meta_object',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetaObjectTask',
            fields=[
                ('object_task_sid', models.AutoField(primary_key=True, serialize=False)),
                ('object_task_status', models.CharField(max_length=30)),
                ('incremental_load', models.BooleanField(blank=True, null=True)),
                ('insert_date', models.DateTimeField()),
                ('insert_user', models.CharField(max_length=255)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'meta_object_task',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetaObjectType',
            fields=[
                ('object_type_sid', models.IntegerField(primary_key=True, serialize=False)),
                ('object_type_id', models.CharField(blank=True, max_length=30, null=True)),
                ('object_type_name', models.CharField(blank=True, max_length=255, null=True)),
                ('insert_date', models.DateTimeField()),
                ('insert_user', models.CharField(max_length=255)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'meta_object_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetaPopulation',
            fields=[
                ('population_sid', models.AutoField(primary_key=True, serialize=False)),
                ('population_dt', models.DateTimeField()),
                ('act_f', models.BooleanField()),
                ('run_count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'meta_population',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetaTask',
            fields=[
                ('task_sid', models.AutoField(primary_key=True, serialize=False)),
                ('task_type', models.CharField(max_length=30)),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
                ('dependent_task_sid', models.IntegerField(blank=True, null=True)),
                ('task_name', models.CharField(max_length=255)),
                ('task_desc', models.CharField(blank=True, max_length=2000, null=True)),
                ('task_status', models.CharField(blank=True, max_length=50, null=True)),
                ('dq_check_type_sid', models.IntegerField(blank=True, null=True)),
                ('ssis_package_guid', models.CharField(blank=True, max_length=255, null=True)),
                ('ssis_package_name', models.CharField(blank=True, max_length=255, null=True)),
                ('ssis_package_version', models.CharField(blank=True, max_length=30, null=True)),
                ('ssis_package_path', models.CharField(blank=True, max_length=255, null=True)),
                ('ssis_package_file_name', models.CharField(blank=True, max_length=255, null=True)),
                ('server_name', models.CharField(blank=True, max_length=255, null=True)),
                ('source_database_name', models.CharField(blank=True, max_length=255, null=True)),
                ('destination_database_name', models.CharField(blank=True, max_length=255, null=True)),
                ('include_in_report', models.BooleanField(blank=True, null=True)),
                ('external_end_task', models.BooleanField(blank=True, null=True)),
                ('insert_date', models.DateTimeField(blank=True, null=True)),
                ('insert_user', models.CharField(blank=True, max_length=255, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=255, null=True)),
                ('task_order', models.IntegerField(blank=True, db_column='TASK_ORDER', null=True)),
            ],
            options={
                'db_table': 'meta_task',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetaTaskLog',
            fields=[
                ('task_log_sid', models.AutoField(primary_key=True, serialize=False)),
                ('task_log_status', models.CharField(blank=True, max_length=50, null=True)),
                ('task_log_duration', models.IntegerField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('run_count', models.IntegerField(blank=True, null=True)),
                ('ssis_execution_id', models.CharField(blank=True, max_length=255, null=True)),
                ('inc_load_date_from', models.DateTimeField(blank=True, null=True)),
                ('inc_load_date_to', models.DateTimeField(blank=True, null=True)),
                ('inc_load_int_from', models.IntegerField(blank=True, null=True)),
                ('inc_load_int_to', models.IntegerField(blank=True, null=True)),
                ('insert_date', models.DateTimeField(blank=True, null=True)),
                ('insert_user', models.CharField(blank=True, max_length=255, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'meta_task_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetaTaskLogDetail',
            fields=[
                ('task_log_detail_sid', models.AutoField(primary_key=True, serialize=False)),
                ('machine_name', models.CharField(blank=True, max_length=255, null=True)),
                ('ssis_package_name', models.CharField(blank=True, max_length=255, null=True)),
                ('ssis_package_start_time', models.DateTimeField(blank=True, null=True)),
                ('ssis_package_duration', models.IntegerField(blank=True, null=True)),
                ('ssis_task_name', models.CharField(blank=True, max_length=255, null=True)),
                ('ssis_task_id', models.CharField(blank=True, max_length=255, null=True)),
                ('ssis_task_duration', models.IntegerField(blank=True, null=True)),
                ('ssis_sql', models.TextField(blank=True, null=True)),
                ('ssis_info', models.CharField(blank=True, max_length=2000, null=True)),
                ('rows_selected', models.IntegerField(blank=True, null=True)),
                ('rows_updated', models.IntegerField(blank=True, null=True)),
                ('rows_inserted', models.IntegerField(blank=True, null=True)),
                ('rows_deleted', models.IntegerField(blank=True, null=True)),
                ('insert_date', models.DateTimeField()),
                ('insert_user', models.CharField(max_length=255)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'meta_task_log_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Proba',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_sid', models.IntegerField(blank=True, null=True)),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
                ('task_status', models.CharField(blank=True, max_length=255, null=True)),
                ('task_order', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'proba',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SmGroups',
            fields=[
                ('sm_group_id', models.AutoField(db_column='SM_GROUP_ID', primary_key=True, serialize=False)),
                ('group_name', models.CharField(blank=True, db_column='GROUP_NAME', max_length=50, null=True)),
                ('email_address', models.CharField(blank=True, db_column='EMAIL_ADDRESS', max_length=50, null=True)),
            ],
            options={
                'db_table': 'SM_GROUPS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SmType',
            fields=[
                ('sm_type_id', models.AutoField(db_column='SM_TYPE_ID', primary_key=True, serialize=False)),
                ('mail_type', models.CharField(blank=True, db_column='MAIL_TYPE', max_length=50, null=True)),
            ],
            options={
                'db_table': 'SM_TYPE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SmTypeXGroups',
            fields=[
                ('sm_txg_id', models.AutoField(db_column='SM_TXG_ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'SM_TYPE_X_GROUPS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SmUsers',
            fields=[
                ('sm_user_id', models.AutoField(db_column='SM_USER_ID', primary_key=True, serialize=False)),
                ('email_address', models.CharField(blank=True, db_column='EMAIL_ADDRESS', max_length=50, null=True)),
                ('name', models.CharField(blank=True, db_column='NAME', max_length=50, null=True)),
            ],
            options={
                'db_table': 'SM_USERS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SmUsersXGroups',
            fields=[
                ('sm_uxg_id', models.AutoField(db_column='SM_UXG_ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'SM_USERS_X_GROUPS',
                'managed': False,
            },
        ),
    ]
